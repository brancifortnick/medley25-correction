{"ast":null,"code":"// constants\nconst SET_USER='session/SET_USER';const REMOVE_USER='session/REMOVE_USER';const setUser=user=>({type:SET_USER,payload:user});const removeUser=()=>({type:REMOVE_USER});const initialState={user:null};export const authenticate=()=>async dispatch=>{const response=await fetch('/api/auth/',{headers:{'Content-Type':'application/json'}});if(response.ok){const data=await response.json();if(data.errors){return;}dispatch(setUser(data));}};export const login=(email,password)=>async dispatch=>{const response=await fetch('/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(response.ok){const data=await response.json();dispatch(setUser(data));return null;}else if(response.status<500){const data=await response.json();if(data.errors){return data.errors;}}else{return['An error occurred. Please try again.'];}};export const demoLogin=()=>async dispatch=>{const response=await fetch(\"/api/auth/demo\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});const demoUser=await response.json();dispatch(setUser(demoUser));};export const logout=()=>async dispatch=>{const response=await fetch('/api/auth/logout',{headers:{'Content-Type':'application/json'}});if(response.ok){dispatch(removeUser());}};export const signUp=(username,email,password)=>async dispatch=>{const response=await fetch('/api/auth/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,email,password})});if(response.ok){const data=await response.json();dispatch(setUser(data));return null;}else if(response.status<500){const data=await response.json();if(data.errors){return data.errors;}}else{return['An error occurred. Please try again.'];}};export default function reducer(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_USER:return{user:action.payload};case REMOVE_USER:return{user:null};default:return state;}}","map":{"version":3,"names":["SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","initialState","authenticate","dispatch","response","fetch","headers","ok","data","json","errors","login","email","password","method","body","JSON","stringify","status","demoLogin","demoUser","logout","signUp","username","reducer","state","arguments","length","undefined","action"],"sources":["/home/nicholas/med/medley-sesh/react-app/src/store/session.js"],"sourcesContent":["// constants\nconst SET_USER = 'session/SET_USER';\nconst REMOVE_USER = 'session/REMOVE_USER';\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER,\n})\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return;\n    }\n\n    dispatch(setUser(data));\n  }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n\n}\nexport const demoLogin = () => async (dispatch) => {\n  const response = await fetch(\"/api/auth/demo\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const demoUser = await response.json();\n  dispatch(setUser(demoUser));\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch('/api/auth/logout', {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\n\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return { user: action.payload }\n    case REMOVE_USER:\n      return { user: null }\n    default:\n      return state;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}