{"ast":null,"code":"const GET_MUSICIANS=\"musician/GET_MUSICIANS\";const GET_ONE=\"musician/GET_ONE\";const ADD_MUSICIAN=\"musician/ADD_MUSICIAN\";const DELETE_MUSICIAN=\"musician/DELETE_MUSICIAN\";const UPDATE_BIOGRAPHY=\"musician/UPDATE_BIOGRAPHY\";const getAllArtists=musicians=>({type:GET_MUSICIANS,payload:musicians});const getOne=musician=>({type:GET_ONE,payload:musician});const addMusician=musician=>({type:ADD_MUSICIAN,payload:musician});const deleteMusician=musician=>({type:DELETE_MUSICIAN,payload:musician});const updateBio=musician=>({type:UPDATE_BIOGRAPHY,payload:musician});export const getAllMusicians=()=>async dispatch=>{const res=await fetch(`/api/musicians/`);if(res.ok){const data=await res.json();dispatch(getAllArtists(data.musicians));return data;}};export const addingFullMusician=(profile_img,biography,userId,musician_name)=>{return async dispatch=>{try{// Validate inputs\nif(!profile_img||!biography||!userId||!musician_name){console.error(\"Missing required parameters\");return{error:\"Missing required parameters\"};}// Step 1: Upload image\nconst formData=new FormData();formData.append(\"profile_img\",profile_img);const imageRes=await fetch(\"/api/musicians/new-picture\",{method:\"POST\",body:formData});if(!imageRes.ok){const errorData=await imageRes.json().catch(()=>({}));console.error(\"Image upload failed:\",imageRes.status,errorData);return{error:`Image upload failed: ${imageRes.status}`};}const imageData=await imageRes.json();const profileImgUrl=imageData.url;// Step 2: Create musician with uploaded image URL\nconst musicianData=new FormData();musicianData.append(\"profile_img\",profileImgUrl);musicianData.append(\"biography\",biography);musicianData.append(\"user_id\",userId);musicianData.append(\"musician_name\",musician_name);const musicianRes=await fetch(\"/api/musicians/new\",{method:\"POST\",body:musicianData});if(musicianRes.ok){const newMusician=await musicianRes.json();dispatch(addMusician(newMusician));return newMusician;}else{const errorData=await musicianRes.json().catch(()=>({}));console.error(\"Musician creation failed:\",musicianRes.status,errorData);return{error:`Musician creation failed: ${musicianRes.status}`};}}catch(error){console.error(\"Error creating musician:\",error);return{error:error.message};}};};export const getOneMusician=id=>async dispatch=>{const res=await fetch(`/api/musicians/${id}`);if(res.ok){const data=await res.json();dispatch(getOne(data));}};export const deleteOneMusician=id=>async dispatch=>{const res=await fetch(`/api/musicians/${id}`,{method:\"DELETE\"});if(res.ok){dispatch(deleteMusician(id));}else{console.log(\"Musician Can't be deleted\");}};export const updateBiography=(formData,musicianId)=>async dispatch=>{const response=await fetch(`/api/musicians/${musicianId}/biography`,{method:\"PUT\",body:formData});if(response.ok){const biography=await response.json();dispatch(updateBio(biography));}};const initialState={};export default function reducer(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_MUSICIANS:let newState={};action.payload.forEach(musician=>{newState[musician.id]=musician;});return newState;case ADD_MUSICIAN:const addState={...state};addState[action.payload.id]=action.payload;return addState;case GET_ONE:return{...action.payload};case DELETE_MUSICIAN:const currentState={...state};delete currentState[action.payload.id];return currentState;case UPDATE_BIOGRAPHY:return{...action.payload};default:return state;}}","map":{"version":3,"names":["GET_MUSICIANS","GET_ONE","ADD_MUSICIAN","DELETE_MUSICIAN","UPDATE_BIOGRAPHY","getAllArtists","musicians","type","payload","getOne","musician","addMusician","deleteMusician","updateBio","getAllMusicians","dispatch","res","fetch","ok","data","json","addingFullMusician","profile_img","biography","userId","musician_name","console","error","formData","FormData","append","imageRes","method","body","errorData","catch","status","imageData","profileImgUrl","url","musicianData","musicianRes","newMusician","message","getOneMusician","id","deleteOneMusician","log","updateBiography","musicianId","response","initialState","reducer","state","arguments","length","undefined","action","newState","forEach","addState","currentState"],"sources":["/home/nicholas/med/medley-sesh/react-app/src/store/musician.js"],"sourcesContent":["const GET_MUSICIANS = \"musician/GET_MUSICIANS\";\nconst GET_ONE = \"musician/GET_ONE\";\nconst ADD_MUSICIAN = \"musician/ADD_MUSICIAN\";\nconst DELETE_MUSICIAN = \"musician/DELETE_MUSICIAN\";\nconst UPDATE_BIOGRAPHY = \"musician/UPDATE_BIOGRAPHY\";\n\nconst getAllArtists = (musicians) => ({\n  type: GET_MUSICIANS,\n  payload: musicians,\n});\n\nconst getOne = (musician) => ({\n  type: GET_ONE,\n  payload: musician,\n});\n\nconst addMusician = (musician) => ({\n  type: ADD_MUSICIAN,\n  payload: musician,\n});\n\nconst deleteMusician = (musician) => ({\n  type: DELETE_MUSICIAN,\n  payload: musician,\n});\n\nconst updateBio = (musician) => ({\n  type: UPDATE_BIOGRAPHY,\n  payload: musician,\n});\n\nexport const getAllMusicians = () => async (dispatch) => {\n  const res = await fetch(`/api/musicians/`);\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(getAllArtists(data.musicians));\n    return data;\n  }\n};\n\nexport const addingFullMusician = (profile_img, biography, userId, musician_name) => {\n  return async (dispatch) => {\n    try {\n      // Validate inputs\n      if (!profile_img || !biography || !userId || !musician_name) {\n        console.error(\"Missing required parameters\");\n        return { error: \"Missing required parameters\" };\n      }\n\n      // Step 1: Upload image\n      const formData = new FormData();\n      formData.append(\"profile_img\", profile_img);\n\n      const imageRes = await fetch(\"/api/musicians/new-picture\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!imageRes.ok) {\n        const errorData = await imageRes.json().catch(() => ({}));\n        console.error(\"Image upload failed:\", imageRes.status, errorData);\n        return { error: `Image upload failed: ${imageRes.status}` };\n      }\n\n      const imageData = await imageRes.json();\n      const profileImgUrl = imageData.url;\n\n      // Step 2: Create musician with uploaded image URL\n      const musicianData = new FormData();\n      musicianData.append(\"profile_img\", profileImgUrl);\n      musicianData.append(\"biography\", biography);\n      musicianData.append(\"user_id\", userId);\n      musicianData.append(\"musician_name\", musician_name);\n\n      const musicianRes = await fetch(\"/api/musicians/new\", {\n        method: \"POST\",\n        body: musicianData,\n      });\n\n      if (musicianRes.ok) {\n        const newMusician = await musicianRes.json();\n        dispatch(addMusician(newMusician));\n        return newMusician;\n      } else {\n        const errorData = await musicianRes.json().catch(() => ({}));\n        console.error(\"Musician creation failed:\", musicianRes.status, errorData);\n        return { error: `Musician creation failed: ${musicianRes.status}` };\n      }\n    } catch (error) {\n      console.error(\"Error creating musician:\", error);\n      return { error: error.message };\n    }\n  };\n};\n\nexport const getOneMusician = (id) => async (dispatch) => {\n  const res = await fetch(`/api/musicians/${id}`);\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(getOne(data));\n  }\n};\n\nexport const deleteOneMusician = (id) => async (dispatch) => {\n  const res = await fetch(`/api/musicians/${id}`, {\n    method: \"DELETE\",\n  });\n  if (res.ok) {\n    dispatch(deleteMusician(id));\n  } else {\n    console.log(\"Musician Can't be deleted\");\n  }\n};\n\nexport const updateBiography = (formData, musicianId) => async (dispatch) => {\n  const response = await fetch(`/api/musicians/${musicianId}/biography`, {\n    method: \"PUT\",\n    body: formData,\n  });\n  if (response.ok) {\n    const biography = await response.json();\n    dispatch(updateBio(biography));\n  }\n};\n\nconst initialState = {};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_MUSICIANS:\n      let newState = {};\n      action.payload.forEach((musician) => {\n        newState[musician.id] = musician;\n      });\n      return newState;\n    case ADD_MUSICIAN:\n      const addState = { ...state };\n      addState[action.payload.id] = action.payload;\n      return addState;\n    case GET_ONE:\n      return { ...action.payload };\n    case DELETE_MUSICIAN:\n      const currentState = { ...state };\n      delete currentState[action.payload.id];\n      return currentState;\n    case UPDATE_BIOGRAPHY:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}