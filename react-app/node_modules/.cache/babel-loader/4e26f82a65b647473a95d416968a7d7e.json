{"ast":null,"code":"var _jsxFileName = \"/home/nicholas/med/medley-sesh/react-app/src/components/UploadSong/UploadSong.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createNewSong } from \"../../store/song\";\nimport { getMusiciansTracks } from \"../../store/song\";\nimport { Modal } from \"../../context/Modal\";\nimport \"./UploadSong.css\";\nconst UploadSong = _ref => {\n  let {\n    musicianId\n  } = _ref;\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.session.user);\n  const [showModal, setModal] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [file_url, setSong] = useState(null);\n  const [song_img, setSongImg] = useState(null);\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file_url\", file_url);\n    setModal(false);\n    const res = await fetch(\"/api/songs/new-song\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (res.ok) {\n      let file_url = await res.json();\n      dispatch(createNewSong(title, file_url, song_img, Number(musicianId)));\n    }\n    history.push(`/musicians/${musicianId}`);\n  };\n  const uploadTrack = async e => {\n    const file = e.target.files[0];\n    setSong(file);\n  };\n  useEffect(() => {\n    dispatch(getMusiciansTracks(parseInt(musicianId)));\n  }, [dispatch, musicianId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"song-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"add-song-text\",\n    onClick: () => setModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Add a song\"), showModal && /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Add New Track\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Title:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Title\",\n    onChange: e => setTitle(e.target.value),\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Song\", /*#__PURE__*/React.createElement(\"input\", {\n    name: \"file_url\",\n    accept: \"audio/*\",\n    type: \"file\",\n    onChange: uploadTrack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"upload-song\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"create-song-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Upload\"))))));\n};\nexport default UploadSong;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","createNewSong","getMusiciansTracks","Modal","UploadSong","_ref","musicianId","history","dispatch","user","state","session","showModal","setModal","title","setTitle","file_url","setSong","song_img","setSongImg","onSubmit","e","preventDefault","formData","FormData","append","res","fetch","method","body","ok","json","Number","push","uploadTrack","file","target","files","parseInt","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","onClose","type","name","placeholder","onChange","value","accept"],"sources":["/home/nicholas/med/medley-sesh/react-app/src/components/UploadSong/UploadSong.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createNewSong } from \"../../store/song\";\nimport { getMusiciansTracks } from \"../../store/song\";\nimport { Modal } from \"../../context/Modal\";\nimport \"./UploadSong.css\";\n\nconst UploadSong = ({ musicianId }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.session.user);\n\n  const [showModal, setModal] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [file_url, setSong] = useState(null);\n  const [song_img, setSongImg] = useState(null);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file_url\", file_url);\n    setModal(false);\n    const res = await fetch(\"/api/songs/new-song\", {\n      method: \"POST\",\n      body: formData,\n    });\n    if (res.ok) {\n      let file_url = await res.json();\n      dispatch(createNewSong(title, file_url, song_img, Number(musicianId)));\n    }\n    history.push(`/musicians/${musicianId}`);\n  };\n\n  const uploadTrack = async (e) => {\n    const file = e.target.files[0];\n    setSong(file);\n  };\n\n  useEffect(() => {\n    dispatch(getMusiciansTracks(parseInt(musicianId)));\n  }, [dispatch, musicianId]);\n\n  return (\n    <div className=\"song-form-container\">\n      <button\n        id=\"add-song-text\"\n        onClick={() => setModal(true)}\n      >\n        Add a song\n      </button>\n      {showModal && (\n        <Modal onClose={() => setModal(false)}>\n          <h2>Add New Track</h2>\n          <form onSubmit={onSubmit}>\n            <div className=\"form-container\">\n              <label id=\"title\">\n                Title:\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  value={title}\n                />\n              </label>\n              <label className=\"form-input\">\n                Song\n                <input\n                  name=\"file_url\"\n                  accept=\"audio/*\"\n                  type=\"file\"\n                  onChange={uploadTrack}\n                />\n              </label>\n              <div id=\"upload-song\">\n                <button type=\"submit\" id=\"create-song-btn\">\n                  Upload\n                </button>\n              </div>\n            </div>\n          </form>\n        </Modal>\n      )}\n    </div>\n  );\n};\nexport default UploadSong;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}