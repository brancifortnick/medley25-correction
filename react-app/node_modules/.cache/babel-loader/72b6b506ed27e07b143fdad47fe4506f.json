{"ast":null,"code":"const GET_USER = \"user/GET_USER\";\nconst ADD_MUSICIAN = \"user/ADD_MUSICIAN\";\nconst getUser = user => ({\n  type: GET_USER,\n  payload: user\n});\nconst addMusician = data => ({\n  type: ADD_MUSICIAN,\n  payload: data\n});\nexport const getOneUser = userId => async dispatch => {\n  const res = await fetch(`/api/users/${userId}`);\n  if (res.ok) {\n    const user = await res.json();\n    dispatch(getUser(user));\n    return user;\n  }\n};\nexport const addMusicianProfile = userId => async dispatch => {\n  const res = await fetch(`/api/users/${userId}/add-musician`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(addMusician(data));\n    return data;\n  } else {\n    const errors = await res.json();\n    return errors;\n  }\n};\nconst initialState = {};\nexport default function usersReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_USER:\n      return {\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"names":["GET_USER","ADD_MUSICIAN","getUser","user","type","payload","addMusician","data","getOneUser","userId","dispatch","res","fetch","ok","json","addMusicianProfile","method","headers","errors","initialState","usersReducer","state","arguments","length","undefined","action"],"sources":["/home/nicholas/med/medley-sesh/react-app/src/store/user.js"],"sourcesContent":["const GET_USER = \"user/GET_USER\";\nconst ADD_MUSICIAN = \"user/ADD_MUSICIAN\";\n\n\nconst getUser = (user) => ({\n    type: GET_USER,\n    payload: user,\n})\n\nconst addMusician = (data) => ({\n    type: ADD_MUSICIAN,\n    payload: data,\n})\n\n\n\nexport const getOneUser = (userId) => async (dispatch) => {\n  const res = await fetch(`/api/users/${userId}`);\n  if (res.ok) {\n    const user = await res.json();\n    dispatch(getUser(user));\n    return user;\n  }\n};\n\nexport const addMusicianProfile = (userId) => async (dispatch) => {\n  const res = await fetch(`/api/users/${userId}/add-musician`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  \n  if (res.ok) {\n    const data = await res.json();\n    dispatch(addMusician(data));\n    return data;\n  } else {\n    const errors = await res.json();\n    return errors;\n  }\n};\n\nconst initialState = {};\n\nexport default function usersReducer(state = initialState, action){\n    switch (action.type){\n        case GET_USER:\n            return {\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,eAAe;AAChC,MAAMC,YAAY,GAAG,mBAAmB;AAGxC,MAAMC,OAAO,GAAIC,IAAI,KAAM;EACvBC,IAAI,EAAEJ,QAAQ;EACdK,OAAO,EAAEF;AACb,CAAC,CAAC;AAEF,MAAMG,WAAW,GAAIC,IAAI,KAAM;EAC3BH,IAAI,EAAEH,YAAY;EAClBI,OAAO,EAAEE;AACb,CAAC,CAAC;AAIF,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EACxD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAcH,MAAM,EAAE,CAAC;EAC/C,IAAIE,GAAG,CAACE,EAAE,EAAE;IACV,MAAMV,IAAI,GAAG,MAAMQ,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BJ,QAAQ,CAACR,OAAO,CAACC,IAAI,CAAC,CAAC;IACvB,OAAOA,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMY,kBAAkB,GAAIN,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAChE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAcH,MAAM,eAAe,EAAE;IAC3DO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAIN,GAAG,CAACE,EAAE,EAAE;IACV,MAAMN,IAAI,GAAG,MAAMI,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BJ,QAAQ,CAACJ,WAAW,CAACC,IAAI,CAAC,CAAC;IAC3B,OAAOA,IAAI;EACb,CAAC,MAAM;IACL,MAAMW,MAAM,GAAG,MAAMP,GAAG,CAACG,IAAI,CAAC,CAAC;IAC/B,OAAOI,MAAM;EACf;AACF,CAAC;AAED,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,eAAe,SAASC,YAAYA,CAAA,EAA8B;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,YAAY;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7D,QAAQC,MAAM,CAACrB,IAAI;IACf,KAAKJ,QAAQ;MACT,OAAO;QACH,GAAGyB,MAAM,CAACpB;MACd,CAAC;IACL;MACI,OAAOgB,KAAK;EACpB;AACJ;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}