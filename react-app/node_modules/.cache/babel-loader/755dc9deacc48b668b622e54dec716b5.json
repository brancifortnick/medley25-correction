{"ast":null,"code":"import React,{useState}from'react';import{useSelector,useDispatch}from'react-redux';import{Redirect}from'react-router-dom';import{login}from'../../store/session';import'./LoginForm.css';const LoginForm=()=>{const[errors,setErrors]=useState([]);const[email,setEmail]=useState('');const[password,setPassword]=useState('');const user=useSelector(state=>state.session.user);const dispatch=useDispatch();const onLogin=async e=>{e.preventDefault();const data=await dispatch(login(email,password));if(data){setErrors(data);}};const updateEmail=e=>{setEmail(e.target.value);};const updatePassword=e=>{setPassword(e.target.value);};if(user){return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}return/*#__PURE__*/React.createElement(\"div\",{className:\"login-container\"},/*#__PURE__*/React.createElement(\"form\",{className:\"login\",onSubmit:onLogin},/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},errors.map((error,ind)=>/*#__PURE__*/React.createElement(\"li\",{key:ind},error))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{name:\"email\",type:\"email\",placeholder:\"Email\",value:email,onChange:updateEmail})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{name:\"password\",type:\"password\",placeholder:\"Password\",value:password,onChange:updatePassword})),/*#__PURE__*/React.createElement(\"button\",{className:\"login\",type:\"submit\"},\"Login\")));};export default LoginForm;","map":{"version":3,"names":["React","useState","useSelector","useDispatch","Redirect","login","LoginForm","errors","setErrors","email","setEmail","password","setPassword","user","state","session","dispatch","onLogin","e","preventDefault","data","updateEmail","target","value","updatePassword","createElement","to","className","onSubmit","map","error","ind","key","htmlFor","name","type","placeholder","onChange"],"sources":["/home/nicholas/med/medley-sesh/react-app/src/components/auth/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/session';\nimport './LoginForm.css'\n\n\nconst LoginForm = () => {\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const onLogin = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login\" onSubmit={onLogin}>\n        <div className=\"errors\">\n          {errors.map((error, ind) => (\n            <li key={ind}>{error}</li>\n          ))}\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={updateEmail}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={updatePassword}\n          />\n        </div>\n        <button className=\"login\" type=\"submit\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,KAAK,KAAQ,qBAAqB,CAC3C,MAAO,iBAAiB,CAGxB,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAY,IAAI,CAAGX,WAAW,CAACY,KAAK,EAAIA,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,CACrD,KAAM,CAAAG,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAc,OAAO,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACX,KAAK,CAACI,KAAK,CAAEE,QAAQ,CAAC,CAAC,CACnD,GAAIS,IAAI,CAAE,CACRZ,SAAS,CAACY,IAAI,CAAC,CACjB,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAIH,CAAC,EAAK,CACzBR,QAAQ,CAACQ,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIN,CAAC,EAAK,CAC5BN,WAAW,CAACM,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAC7B,CAAC,CAED,GAAIV,IAAI,CAAE,CACR,mBAAOb,KAAA,CAAAyB,aAAA,CAACrB,QAAQ,EAACsB,EAAE,CAAC,GAAG,CAAE,CAAC,CAC5B,CAEA,mBACE1B,KAAA,CAAAyB,aAAA,QAAKE,SAAS,CAAC,iBAAiB,eAC9B3B,KAAA,CAAAyB,aAAA,SAAME,SAAS,CAAC,OAAO,CAACC,QAAQ,CAAEX,OAAQ,eACxCjB,KAAA,CAAAyB,aAAA,QAAKE,SAAS,CAAC,QAAQ,EACpBpB,MAAM,CAACsB,GAAG,CAAC,CAACC,KAAK,CAAEC,GAAG,gBACrB/B,KAAA,CAAAyB,aAAA,OAAIO,GAAG,CAAED,GAAI,EAAED,KAAU,CAC1B,CACE,CAAC,cACN9B,KAAA,CAAAyB,aAAA,yBACEzB,KAAA,CAAAyB,aAAA,UAAOQ,OAAO,CAAC,OAAO,EAAC,OAAY,CAAC,cACpCjC,KAAA,CAAAyB,aAAA,UACES,IAAI,CAAC,OAAO,CACZC,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,OAAO,CACnBb,KAAK,CAAEd,KAAM,CACb4B,QAAQ,CAAEhB,WAAY,CACvB,CACE,CAAC,cACNrB,KAAA,CAAAyB,aAAA,yBACEzB,KAAA,CAAAyB,aAAA,UAAOQ,OAAO,CAAC,UAAU,EAAC,UAAe,CAAC,cAC1CjC,KAAA,CAAAyB,aAAA,UACES,IAAI,CAAC,UAAU,CACfC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBb,KAAK,CAAEZ,QAAS,CAChB0B,QAAQ,CAAEb,cAAe,CAC1B,CACE,CAAC,cACNxB,KAAA,CAAAyB,aAAA,WAAQE,SAAS,CAAC,OAAO,CAACQ,IAAI,CAAC,QAAQ,EAAC,OAEhC,CACJ,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA7B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}