{"ast":null,"code":"var _jsxFileName = \"/home/nicholas/med/medley-sesh/react-app/src/components/AA-NotUsingFolder/MusicianFormRefactor.js\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getAllMusicians, addingFullMusician } from \"../../store/musician\";\nconst MusicianFormRefactor = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.session.user);\n\n  // const [musicians, setMusicians] = useState([]);\n  const [musician_name, setMusicianName] = useState(\"\");\n  const [profile_img, setProfileImg] = useState('');\n  const [biography, setBiography] = useState(\"\");\n  const userId = user.id;\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    // Validate required fields\n    if (!profile_img || !biography || !musician_name) {\n      alert(\"Please fill in all fields and select an image\");\n      return;\n    }\n    try {\n      const result = await dispatch(addingFullMusician(profile_img, biography, userId, musician_name));\n      if (result && result.error) {\n        console.error(\"Error creating musician:\", result.error);\n        alert(\"Error creating musician: \" + result.error);\n        return;\n      }\n\n      // Refresh the musicians list\n      dispatch(getAllMusicians());\n\n      // Navigate to user profile\n      history.push(`/users/${user.id}`);\n    } catch (error) {\n      console.error(\"Unexpected error:\", error);\n      alert(\"An unexpected error occurred\");\n    }\n  };\n  const updateProfileImg = e => {\n    const file = e.target.files[0];\n    if (file) {\n      // Validate file type\n      const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n      if (!allowedTypes.includes(file.type)) {\n        alert('Please select a valid image file (JPEG, JPG, or PNG)');\n        e.target.value = '';\n        return;\n      }\n\n      // Validate file size (5MB limit)\n      const maxSize = 5 * 1024 * 1024; // 5MB in bytes\n      if (file.size > maxSize) {\n        alert('File size must be less than 5MB');\n        e.target.value = '';\n        return;\n      }\n      setProfileImg(file);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outer_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"add-musician-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Add A Musician\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"musician-form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"musician_name\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Musician Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"musician_name\",\n    placeholder: \"Musician Name\",\n    onChange: e => setMusicianName(e.target.value),\n    value: musician_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"add-profile-pic\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Add Profile Picture\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      color: \"white\",\n      fontSize: \"15px\",\n      fontWeight: \"500\"\n    },\n    type: \"file\",\n    accept: \"image/*\",\n    name: \"profile_img\",\n    onChange: updateProfileImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"biography\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Biography\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"biography\",\n    type: \"text\",\n    placeholder: \"biography...\",\n    onChange: e => setBiography(e.target.value),\n    value: biography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    type: \"submit\",\n    id: \"create_musician\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\nexport default MusicianFormRefactor;\n\n// Sample code from PayChecker.js for context\n// PayChecker.js\n\nfunction calculateBasePay(hoursWorked) {\n  let hourlyRate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n  return hoursWorked * hourlyRate;\n}\nfunction calculateOvertimePay(hoursWorked) {\n  let hourlyRate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n  const overtimeHours = Math.max(0, hoursWorked - 40);\n  return overtimeHours * hourlyRate * 1.5;\n}\nfunction calculateTotalPay(_ref) {\n  let {\n    hoursWorked,\n    serviceCharge = 0,\n    gratuity = 0,\n    shiftPremium = 0,\n    pto = 0,\n    holidayPay = 0,\n    predictPay = 0\n  } = _ref;\n  const basePay = calculateBasePay(hoursWorked);\n  const overtimePay = calculateOvertimePay(hoursWorked);\n  return basePay + overtimePay + serviceCharge + gratuity + shiftPremium + pto + holidayPay + predictPay;\n}\nconst week1 = {\n  hoursWorked: 44.75,\n  serviceCharge: 638.81,\n  gratuity: 226.55,\n  shiftPremium: 0,\n  pto: 0,\n  holidayPay: 0,\n  predictPay: 0\n};\nconst week2 = {\n  hoursWorked: 28.18,\n  serviceCharge: 530.71,\n  gratuity: 150.00,\n  shiftPremium: 0,\n  pto: 0,\n  holidayPay: 0,\n  predictPay: 0\n};","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useHistory","getAllMusicians","addingFullMusician","MusicianFormRefactor","history","dispatch","user","state","session","musician_name","setMusicianName","profile_img","setProfileImg","biography","setBiography","userId","id","onSubmit","e","preventDefault","alert","result","error","console","push","updateProfileImg","file","target","files","allowedTypes","includes","type","value","maxSize","size","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","style","color","name","placeholder","onChange","fontSize","fontWeight","accept","calculateBasePay","hoursWorked","hourlyRate","arguments","length","undefined","calculateOvertimePay","overtimeHours","Math","max","calculateTotalPay","_ref","serviceCharge","gratuity","shiftPremium","pto","holidayPay","predictPay","basePay","overtimePay","week1","week2"],"sources":["/home/nicholas/med/medley-sesh/react-app/src/components/AA-NotUsingFolder/MusicianFormRefactor.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getAllMusicians, addingFullMusician } from \"../../store/musician\";\n\nconst MusicianFormRefactor = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const user = useSelector((state) => state.session.user);\n\n    // const [musicians, setMusicians] = useState([]);\n    const [musician_name, setMusicianName] = useState(\"\");\n    const [profile_img, setProfileImg] = useState('');\n    const [biography, setBiography] = useState(\"\");\n\n\n    const userId = user.id\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        \n        // Validate required fields\n        if (!profile_img || !biography || !musician_name) {\n            alert(\"Please fill in all fields and select an image\");\n            return;\n        }\n\n        try {\n            const result = await dispatch(\n                addingFullMusician(profile_img, biography, userId, musician_name)\n            );\n            \n            if (result && result.error) {\n                console.error(\"Error creating musician:\", result.error);\n                alert(\"Error creating musician: \" + result.error);\n                return;\n            }\n            \n            // Refresh the musicians list\n            dispatch(getAllMusicians());\n            \n            // Navigate to user profile\n            history.push(`/users/${user.id}`);\n        } catch (error) {\n            console.error(\"Unexpected error:\", error);\n            alert(\"An unexpected error occurred\");\n        }\n    };\n\n    const updateProfileImg = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            // Validate file type\n            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n            if (!allowedTypes.includes(file.type)) {\n                alert('Please select a valid image file (JPEG, JPG, or PNG)');\n                e.target.value = '';\n                return;\n            }\n            \n            // Validate file size (5MB limit)\n            const maxSize = 5 * 1024 * 1024; // 5MB in bytes\n            if (file.size > maxSize) {\n                alert('File size must be less than 5MB');\n                e.target.value = '';\n                return;\n            }\n            \n            setProfileImg(file);\n        }\n    };\n\n    return (\n        <div className=\"outer_card\">\n            <h1 id=\"add-musician-text\">Add A Musician</h1>\n            <form className=\"musician-form\" onSubmit={onSubmit}>\n                <div className=\"input_container\">\n                    <label htmlFor=\"musician_name\" style={{ color: \"white\" }}>\n                        Musician Name\n                    </label>\n                    <input\n                        type=\"text\"\n                        name=\"musician_name\"\n                        placeholder=\"Musician Name\"\n                        onChange={(e) => setMusicianName(e.target.value)}\n                        value={musician_name}\n                    />\n                </div>\n                <label htmlFor=\"add-profile-pic\" style={{ color: \"white\" }}>\n                    Add Profile Picture\n                </label>\n                <input\n                    style={{ color: \"white\", fontSize: \"15px\", fontWeight: \"500\" }}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    name=\"profile_img\"\n\n                    onChange={updateProfileImg}\n                />\n                <label htmlFor=\"biography\" style={{ color: \"white\" }}>\n                    Biography\n                </label>\n                <textarea\n                    name=\"biography\"\n                    type=\"text\"\n                    placeholder=\"biography...\"\n                    onChange={(e) => setBiography(e.target.value)}\n                    value={biography}\n                />\n                <button className=\"submit\" type=\"submit\" id=\"create_musician\">\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n};\nexport default MusicianFormRefactor;\n\n// Sample code from PayChecker.js for context\n// PayChecker.js\n\nfunction calculateBasePay(hoursWorked, hourlyRate = 15) {\n    return hoursWorked * hourlyRate;\n}\n\nfunction calculateOvertimePay(hoursWorked, hourlyRate = 15) {\n    const overtimeHours = Math.max(0, hoursWorked - 40);\n    return overtimeHours * hourlyRate * 1.5;\n}\n\nfunction calculateTotalPay({\n    hoursWorked,\n    serviceCharge = 0,\n    gratuity = 0,\n    shiftPremium = 0,\n    pto = 0,\n    holidayPay = 0,\n    predictPay = 0,\n}) {\n    const basePay = calculateBasePay(hoursWorked);\n    const overtimePay = calculateOvertimePay(hoursWorked);\n    return (\n        basePay +\n        overtimePay +\n        serviceCharge +\n        gratuity +\n        shiftPremium +\n        pto +\n        holidayPay +\n        predictPay\n    );\n}\n\nconst week1 = {\n    hoursWorked: 44.75,\n    serviceCharge: 638.81,\n    gratuity: 226.55,\n    shiftPremium: 0,\n    pto: 0,\n    holidayPay: 0,\n    predictPay: 0,\n};\n\nconst week2 = {\n    hoursWorked: 28.18,\n    serviceCharge: 530.71,\n    gratuity: 150.00,\n    shiftPremium: 0,\n    pto: 0,\n    holidayPay: 0,\n    predictPay: 0,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}