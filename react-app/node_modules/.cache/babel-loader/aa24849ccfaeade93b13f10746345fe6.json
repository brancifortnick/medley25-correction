{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{createNewSong}from\"../../store/song\";import{getMusiciansTracks}from\"../../store/song\";import{Modal}from\"../../context/Modal\";import\"./UploadSong.css\";const UploadSong=_ref=>{let{musicianId}=_ref;const history=useHistory();const dispatch=useDispatch();const user=useSelector(state=>state.session.user);const[showModal,setModal]=useState(false);const[title,setTitle]=useState(\"\");const[file_url,setSong]=useState(null);const[song_img,setSongImg]=useState(null);const onSubmit=async e=>{e.preventDefault();const formData=new FormData();formData.append(\"file_url\",file_url);setModal(false);const res=await fetch(\"/api/songs/new-song\",{method:\"POST\",body:formData});if(res.ok){let file_url=await res.json();dispatch(createNewSong(title,file_url,song_img,Number(musicianId)));}history.push(`/musicians/${musicianId}`);};const uploadTrack=async e=>{const file=e.target.files[0];setSong(file);};useEffect(()=>{dispatch(getMusiciansTracks(parseInt(musicianId)));},[dispatch,musicianId]);return/*#__PURE__*/React.createElement(\"div\",{className:\"song-form-container\"},/*#__PURE__*/React.createElement(\"button\",{id:\"add-song-text\",onClick:()=>setModal(true)},\"Add a song\"),showModal&&/*#__PURE__*/React.createElement(Modal,{onClose:()=>setModal(false)},/*#__PURE__*/React.createElement(\"h2\",null,\"Add New Track\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-container\"},/*#__PURE__*/React.createElement(\"label\",{id:\"title\"},\"Title:\",/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"title\",placeholder:\"Title\",onChange:e=>setTitle(e.target.value),value:title})),/*#__PURE__*/React.createElement(\"label\",{className:\"form-input\"},\"Song\",/*#__PURE__*/React.createElement(\"input\",{name:\"file_url\",accept:\"audio/*\",type:\"file\",onChange:uploadTrack})),/*#__PURE__*/React.createElement(\"div\",{id:\"upload-song\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",id:\"create-song-btn\"},\"Upload\"))))));};export default UploadSong;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","createNewSong","getMusiciansTracks","Modal","UploadSong","_ref","musicianId","history","dispatch","user","state","session","showModal","setModal","title","setTitle","file_url","setSong","song_img","setSongImg","onSubmit","e","preventDefault","formData","FormData","append","res","fetch","method","body","ok","json","Number","push","uploadTrack","file","target","files","parseInt","createElement","className","id","onClick","onClose","type","name","placeholder","onChange","value","accept"],"sources":["/home/nicholas/med/medley-sesh/react-app/src/components/UploadSong/UploadSong.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createNewSong } from \"../../store/song\";\nimport { getMusiciansTracks } from \"../../store/song\";\nimport { Modal } from \"../../context/Modal\";\nimport \"./UploadSong.css\";\n\nconst UploadSong = ({ musicianId }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.session.user);\n\n  const [showModal, setModal] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [file_url, setSong] = useState(null);\n  const [song_img, setSongImg] = useState(null);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file_url\", file_url);\n    setModal(false);\n    const res = await fetch(\"/api/songs/new-song\", {\n      method: \"POST\",\n      body: formData,\n    });\n    if (res.ok) {\n      let file_url = await res.json();\n      dispatch(createNewSong(title, file_url, song_img, Number(musicianId)));\n    }\n    history.push(`/musicians/${musicianId}`);\n  };\n\n  const uploadTrack = async (e) => {\n    const file = e.target.files[0];\n    setSong(file);\n  };\n\n  useEffect(() => {\n    dispatch(getMusiciansTracks(parseInt(musicianId)));\n  }, [dispatch, musicianId]);\n\n  return (\n    <div className=\"song-form-container\">\n      <button\n        id=\"add-song-text\"\n        onClick={() => setModal(true)}\n      >\n        Add a song\n      </button>\n      {showModal && (\n        <Modal onClose={() => setModal(false)}>\n          <h2>Add New Track</h2>\n          <form onSubmit={onSubmit}>\n            <div className=\"form-container\">\n              <label id=\"title\">\n                Title:\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  value={title}\n                />\n              </label>\n              <label className=\"form-input\">\n                Song\n                <input\n                  name=\"file_url\"\n                  accept=\"audio/*\"\n                  type=\"file\"\n                  onChange={uploadTrack}\n                />\n              </label>\n              <div id=\"upload-song\">\n                <button type=\"submit\" id=\"create-song-btn\">\n                  Upload\n                </button>\n              </div>\n            </div>\n          </form>\n        </Modal>\n      )}\n    </div>\n  );\n};\nexport default UploadSong;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}