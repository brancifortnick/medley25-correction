{"ast":null,"code":"const GET_TRACKS=\"song/GET_TRACKS\";const ADD_TRACK=\"song/ADD_TRACK\";const GET_ONE_TRACK=\"song/GET_ONE_TRACK\";const DELETE_TRACK=\"song/DELETE_TRACK\";const getAllSongs=songs=>({type:GET_TRACKS,payload:songs});const addOneSong=song=>({type:ADD_TRACK,payload:song});const grabOneSong=song=>({type:GET_ONE_TRACK,payload:song});const deleteATrack=song=>({type:DELETE_TRACK,payload:song});export const getMusiciansTracks=id=>async dispatch=>{const response=await fetch(`/api/musicians/${id}/songs`);if(response.ok){const songData=await response.json();dispatch(getAllSongs(songData.songs));}else{console.log(\"+++++++____first thunk in SONG STORE___+++++++\");}};export const createNewSong=(title,file_url,song_img,musician_id)=>async dispatch=>{file_url=file_url.url;const res=await fetch(\"/api/songs/new\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({title,file_url,song_img,musician_id})});if(res.ok){const newSong=await res.json();console.log(newSong,\"newSong value from createNewSOng thunk in song.store\");dispatch(addOneSong(newSong));return newSong;}else{console.log(\"erroring out in musician thunk---> createNewSong---> STORE ***SONG**\");}};// export const getOneSingleSong = (id) => async (dispatch) => {\n//   const response = await fetch(`/api/musicians/songs/${id}`);\n//   if (response.ok) {\n//     const singleSong = await response.json();\n//     dispatch(grabOneSong(singleSong));\n//     return singleSong;\n//   } else {\n//     console.log(\"error coming from store => getting single song in SONGSTORE\");\n//   }\n// };\nexport const deleteTrack=id=>async dispatch=>{const response=await fetch(`/api/songs/${id}`,{method:\"DELETE\"});if(response.ok){dispatch(deleteATrack(id));}};const initialState={};export default function reducer(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_TRACKS:const getState={};action.payload.forEach(song=>{getState[song.id]=song;});return getState;case ADD_TRACK:const newNew={...state};newNew[action.payload.id]=action.payload;return newNew;case GET_ONE_TRACK:return{...action.payload};case DELETE_TRACK:const currentState={...state};delete currentState[action.payload];// maybe this should be action.payload.id-not sure\nreturn currentState;default:return state;}}//   case UPDATE_TRACK: {}          //! update track reducer not added yet","map":{"version":3,"names":["GET_TRACKS","ADD_TRACK","GET_ONE_TRACK","DELETE_TRACK","getAllSongs","songs","type","payload","addOneSong","song","grabOneSong","deleteATrack","getMusiciansTracks","id","dispatch","response","fetch","ok","songData","json","console","log","createNewSong","title","file_url","song_img","musician_id","url","res","method","headers","body","JSON","stringify","newSong","deleteTrack","initialState","reducer","state","arguments","length","undefined","action","getState","forEach","newNew","currentState"],"sources":["/home/nicholas/med/medley-sesh/react-app/src/store/song.js"],"sourcesContent":["const GET_TRACKS = \"song/GET_TRACKS\";\nconst ADD_TRACK = \"song/ADD_TRACK\";\nconst GET_ONE_TRACK = \"song/GET_ONE_TRACK\";\nconst DELETE_TRACK = \"song/DELETE_TRACK\";\n\nconst getAllSongs = (songs) => ({\n  type: GET_TRACKS,\n  payload: songs,\n});\n\nconst addOneSong = (song) => ({\n  type: ADD_TRACK,\n  payload: song,\n});\n\nconst grabOneSong = (song) => ({\n  type: GET_ONE_TRACK,\n  payload: song,\n});\n\nconst deleteATrack = (song) => ({\n  type: DELETE_TRACK,\n  payload: song,\n});\n\nexport const getMusiciansTracks = (id) => async (dispatch) => {\n  const response = await fetch(`/api/musicians/${id}/songs`);\n  if (response.ok) {\n    const songData = await response.json();\n    dispatch(getAllSongs(songData.songs));\n  } else {\n    console.log(\"+++++++____first thunk in SONG STORE___+++++++\");\n  }\n};\n\nexport const createNewSong =\n  (title, file_url, song_img, musician_id) => async (dispatch) => {\n    file_url = file_url.url;\n    const res = await fetch(\"/api/songs/new\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ title, file_url, song_img, musician_id }),\n    });\n    if (res.ok) {\n      const newSong = await res.json();\n      console.log(\n        newSong,\n        \"newSong value from createNewSOng thunk in song.store\"\n      );\n      dispatch(addOneSong(newSong));\n      return newSong;\n    } else {\n      console.log(\n        \"erroring out in musician thunk---> createNewSong---> STORE ***SONG**\"\n      );\n    }\n  };\n\n// export const getOneSingleSong = (id) => async (dispatch) => {\n//   const response = await fetch(`/api/musicians/songs/${id}`);\n//   if (response.ok) {\n//     const singleSong = await response.json();\n//     dispatch(grabOneSong(singleSong));\n//     return singleSong;\n//   } else {\n//     console.log(\"error coming from store => getting single song in SONGSTORE\");\n//   }\n// };\n\nexport const deleteTrack = (id) => async (dispatch) => {\n  const response = await fetch(`/api/songs/${id}`, {\n    method: \"DELETE\",\n  });\n  if (response.ok) {\n    dispatch(deleteATrack(id));\n  }\n};\n\nconst initialState = {};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_TRACKS:\n      const getState = {};\n      action.payload.forEach((song) => {\n        getState[song.id] = song;\n      });\n      return getState;\n    case ADD_TRACK:\n      const newNew = { ...state };\n      newNew[action.payload.id] = action.payload;\n      return newNew;\n    case GET_ONE_TRACK:\n      return { ...action.payload };\n    case DELETE_TRACK:\n      const currentState = { ...state };\n      delete currentState[action.payload]; // maybe this should be action.payload.id-not sure\n      return currentState;\n    default:\n      return state;\n  }\n}\n//   case UPDATE_TRACK: {}          //! update track reducer not added yet\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}