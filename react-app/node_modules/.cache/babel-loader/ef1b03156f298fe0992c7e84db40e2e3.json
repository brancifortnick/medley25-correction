{"ast":null,"code":"const GET_MUSICIANS = \"musician/GET_MUSICIANS\";\nconst GET_ONE = \"musician/GET_ONE\";\nconst ADD_MUSICIAN = \"musician/ADD_MUSICIAN\";\nconst DELETE_MUSICIAN = \"musician/DELETE_MUSICIAN\";\nconst UPDATE_BIOGRAPHY = \"musician/UPDATE_BIOGRAPHY\";\nconst getAllArtists = musicians => ({\n  type: GET_MUSICIANS,\n  payload: musicians\n});\nconst getOne = musician => ({\n  type: GET_ONE,\n  payload: musician\n});\nconst addMusician = musician => ({\n  type: ADD_MUSICIAN,\n  payload: musician\n});\nconst deleteMusician = musician => ({\n  type: DELETE_MUSICIAN,\n  payload: musician\n});\nconst updateBio = musician => ({\n  type: UPDATE_BIOGRAPHY,\n  payload: musician\n});\nexport const getAllMusicians = () => async dispatch => {\n  const res = await fetch(`/api/musicians/`);\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(getAllArtists(data.musicians));\n    return data;\n  }\n};\nexport const addingFullMusician = (profile_img, biography, userId, musician_name) => {\n  return async dispatch => {\n    try {\n      // Validate inputs\n      if (!profile_img || !biography || !userId || !musician_name) {\n        console.error(\"Missing required parameters\");\n        return {\n          error: \"Missing required parameters\"\n        };\n      }\n\n      // Step 1: Upload image\n      const formData = new FormData();\n      formData.append(\"profile_img\", profile_img);\n      const imageRes = await fetch(\"/api/musicians/new-picture\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!imageRes.ok) {\n        const errorData = await imageRes.json().catch(() => ({}));\n        console.error(\"Image upload failed:\", imageRes.status, errorData);\n        return {\n          error: `Image upload failed: ${imageRes.status}`\n        };\n      }\n      const imageData = await imageRes.json();\n      const profileImgUrl = imageData.url;\n\n      // Step 2: Create musician with uploaded image URL\n      const musicianData = new FormData();\n      musicianData.append(\"profile_img\", profileImgUrl);\n      musicianData.append(\"biography\", biography);\n      musicianData.append(\"user_id\", userId);\n      musicianData.append(\"musician_name\", musician_name);\n      const musicianRes = await fetch(\"/api/musicians/new\", {\n        method: \"POST\",\n        body: musicianData\n      });\n      if (musicianRes.ok) {\n        const newMusician = await musicianRes.json();\n        dispatch(addMusician(newMusician));\n        return newMusician;\n      } else {\n        const errorData = await musicianRes.json().catch(() => ({}));\n        console.error(\"Musician creation failed:\", musicianRes.status, errorData);\n        return {\n          error: `Musician creation failed: ${musicianRes.status}`\n        };\n      }\n    } catch (error) {\n      console.error(\"Error creating musician:\", error);\n      return {\n        error: error.message\n      };\n    }\n  };\n};\nexport const getOneMusician = id => async dispatch => {\n  const res = await fetch(`/api/musicians/${id}`);\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(getOne(data));\n  }\n};\nexport const deleteOneMusician = id => async dispatch => {\n  const res = await fetch(`/api/musicians/${id}`, {\n    method: \"DELETE\"\n  });\n  if (res.ok) {\n    dispatch(deleteMusician(id));\n  } else {\n    console.log(\"Musician Can't be deleted\");\n  }\n};\nexport const updateBiography = (formData, musicianId) => async dispatch => {\n  const response = await fetch(`/api/musicians/${musicianId}/biography`, {\n    method: \"PUT\",\n    body: formData\n  });\n  if (response.ok) {\n    const biography = await response.json();\n    dispatch(updateBio(biography));\n  }\n};\nconst initialState = {};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_MUSICIANS:\n      let newState = {};\n      action.payload.forEach(musician => {\n        newState[musician.id] = musician;\n      });\n      return newState;\n    case ADD_MUSICIAN:\n      const addState = {\n        ...state\n      };\n      addState[action.payload.id] = action.payload;\n      return addState;\n    case GET_ONE:\n      return {\n        ...action.payload\n      };\n    case DELETE_MUSICIAN:\n      const currentState = {\n        ...state\n      };\n      delete currentState[action.payload.id];\n      return currentState;\n    case UPDATE_BIOGRAPHY:\n      return {\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_MUSICIANS","GET_ONE","ADD_MUSICIAN","DELETE_MUSICIAN","UPDATE_BIOGRAPHY","getAllArtists","musicians","type","payload","getOne","musician","addMusician","deleteMusician","updateBio","getAllMusicians","dispatch","res","fetch","ok","data","json","addingFullMusician","profile_img","biography","userId","musician_name","console","error","formData","FormData","append","imageRes","method","body","errorData","catch","status","imageData","profileImgUrl","url","musicianData","musicianRes","newMusician","message","getOneMusician","id","deleteOneMusician","log","updateBiography","musicianId","response","initialState","reducer","state","arguments","length","undefined","action","newState","forEach","addState","currentState"],"sources":["/home/nicholas/medleyfinal09/medley25-correction/react-app/src/store/musician.js"],"sourcesContent":["const GET_MUSICIANS = \"musician/GET_MUSICIANS\";\nconst GET_ONE = \"musician/GET_ONE\";\nconst ADD_MUSICIAN = \"musician/ADD_MUSICIAN\";\nconst DELETE_MUSICIAN = \"musician/DELETE_MUSICIAN\";\nconst UPDATE_BIOGRAPHY = \"musician/UPDATE_BIOGRAPHY\";\n\nconst getAllArtists = (musicians) => ({\n  type: GET_MUSICIANS,\n  payload: musicians,\n});\n\nconst getOne = (musician) => ({\n  type: GET_ONE,\n  payload: musician,\n});\n\nconst addMusician = (musician) => ({\n  type: ADD_MUSICIAN,\n  payload: musician,\n});\n\nconst deleteMusician = (musician) => ({\n  type: DELETE_MUSICIAN,\n  payload: musician,\n});\n\nconst updateBio = (musician) => ({\n  type: UPDATE_BIOGRAPHY,\n  payload: musician,\n});\n\nexport const getAllMusicians = () => async (dispatch) => {\n  const res = await fetch(`/api/musicians/`);\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(getAllArtists(data.musicians));\n    return data;\n  }\n};\n\nexport const addingFullMusician = (profile_img, biography, userId, musician_name) => {\n  return async (dispatch) => {\n    try {\n      // Validate inputs\n      if (!profile_img || !biography || !userId || !musician_name) {\n        console.error(\"Missing required parameters\");\n        return { error: \"Missing required parameters\" };\n      }\n\n      // Step 1: Upload image\n      const formData = new FormData();\n      formData.append(\"profile_img\", profile_img);\n\n      const imageRes = await fetch(\"/api/musicians/new-picture\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!imageRes.ok) {\n        const errorData = await imageRes.json().catch(() => ({}));\n        console.error(\"Image upload failed:\", imageRes.status, errorData);\n        return { error: `Image upload failed: ${imageRes.status}` };\n      }\n\n      const imageData = await imageRes.json();\n      const profileImgUrl = imageData.url;\n\n      // Step 2: Create musician with uploaded image URL\n      const musicianData = new FormData();\n      musicianData.append(\"profile_img\", profileImgUrl);\n      musicianData.append(\"biography\", biography);\n      musicianData.append(\"user_id\", userId);\n      musicianData.append(\"musician_name\", musician_name);\n\n      const musicianRes = await fetch(\"/api/musicians/new\", {\n        method: \"POST\",\n        body: musicianData,\n      });\n\n      if (musicianRes.ok) {\n        const newMusician = await musicianRes.json();\n        dispatch(addMusician(newMusician));\n        return newMusician;\n      } else {\n        const errorData = await musicianRes.json().catch(() => ({}));\n        console.error(\"Musician creation failed:\", musicianRes.status, errorData);\n        return { error: `Musician creation failed: ${musicianRes.status}` };\n      }\n    } catch (error) {\n      console.error(\"Error creating musician:\", error);\n      return { error: error.message };\n    }\n  };\n};\n\nexport const getOneMusician = (id) => async (dispatch) => {\n  const res = await fetch(`/api/musicians/${id}`);\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(getOne(data));\n  }\n};\n\nexport const deleteOneMusician = (id) => async (dispatch) => {\n  const res = await fetch(`/api/musicians/${id}`, {\n    method: \"DELETE\",\n  });\n  if (res.ok) {\n    dispatch(deleteMusician(id));\n  } else {\n    console.log(\"Musician Can't be deleted\");\n  }\n};\n\nexport const updateBiography = (formData, musicianId) => async (dispatch) => {\n  const response = await fetch(`/api/musicians/${musicianId}/biography`, {\n    method: \"PUT\",\n    body: formData,\n  });\n  if (response.ok) {\n    const biography = await response.json();\n    dispatch(updateBio(biography));\n  }\n};\n\nconst initialState = {};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_MUSICIANS:\n      let newState = {};\n      action.payload.forEach((musician) => {\n        newState[musician.id] = musician;\n      });\n      return newState;\n    case ADD_MUSICIAN:\n      const addState = { ...state };\n      addState[action.payload.id] = action.payload;\n      return addState;\n    case GET_ONE:\n      return { ...action.payload };\n    case DELETE_MUSICIAN:\n      const currentState = { ...state };\n      delete currentState[action.payload.id];\n      return currentState;\n    case UPDATE_BIOGRAPHY:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}